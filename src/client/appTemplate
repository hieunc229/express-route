import React, { createElement } from "react";
import { hydrateRoot } from "react-dom/client";
import { createBrowserRouter, RouterProvider, useRouteError } from "react-router-dom";
{{imports}}

console.log("e");
type Props = {
  routes: { path: string, component: any }[],
  data: any
}

function ErrorBoundary() {
  let error = useRouteError();
  // Uncaught ReferenceError: path is not defined
  return <div>Error: {error?.toString()}</div>;
}

function ClientApp(props: Props) {
  const router = createBrowserRouter(props.routes.map(r => ({
    path: r.path,
    element: createElement(r.component),
    errorElement: <ErrorBoundary />
  })))

  if (typeof __context !== "undefined") {
    return (<__context.Provider value={props.data}>{{htmlComponent}}</__context.Provider>)
  }


  return ({{htmlComponent}})
}

const routes = [{{routes}}]
const ssrData = JSON.parse(document.querySelector("#ssr-data")?.innerHTML || "{}");
console.log(ssrData);
hydrateRoot(document, <ClientApp routes={routes} data={ssrData} />)